name: Deploy to Google Cloud

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: rowadi
  REGION: us-central1
  ARTIFACT_REPO: api-repo
  APP_NAME: ons-api
  BUCKET_NAME: dados-ons-rowadi-projeto-sauter

jobs:
  deploy:
    name: Build, Push and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Zip and Upload Cloud Function source
        run: |-
          sudo apt-get update && sudo apt-get install -y zip
          cd scheduler_function
          zip -r ../function_source.zip .
          cd ..
          gcloud storage cp function_source.zip gs://${{ env.BUCKET_NAME }}/source/scheduler_function.zip

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./api
          push: true
          tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.APP_NAME }}:latest

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true

      - name: Terraform Init
        run: terraform -chdir=infra init

      - name: Terraform Apply
        run: |
          terraform -chdir=infra apply -auto-approve \
            -var="project_id=${{ env.PROJECT_ID }}" \
            -var="region=${{ env.REGION }}" \
            -var="bucket_name=${{ env.BUCKET_NAME }}" \
            -var="docker_image_url=${{ steps.docker_build.outputs.digest }}"